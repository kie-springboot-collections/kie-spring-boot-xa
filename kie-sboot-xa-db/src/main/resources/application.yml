server:
  address: 0.0.0.0
  port: 8090

cxf:
  jaxrs:
    classes-scan: true
    classes-scan-packages: com.redhat.services
  path: /rest

jbpm:
  executor:
    enabled: false


# KIE Server Config
kieserver:
  casemgmt:
    enabled: true
  dmn:
    enabled: true
  drools:
    enabled: true
  jbpm:
    enabled: true
  jbpmui:
    enabled: true
  location: http://localhost:8090/rest/server
  serverId: kie-sboot-service
  serverName: kie-sboot-service
  swagger:
    enabled: true

# KJars to deploy
deployment:
  kjars:
    - alias: kie-sboot-test-kjar
      artifactId: kjar
      containerId: kie-sboot-test-kjar-1_0-SNAPSHOT
      groupId: org.redhat.services
      version: 0.0.1-SNAPSHOT

# Second / Custom Datasource Config
kie:
  spring:
    secondary:
      datasource:
        pu-name: my.other.datasource
        driver-class-name: org.h2.Driver
        password: sa
        username: sa
        url: jdbc:h2:mem:audit-jbpm
        properties:
          hibernate:
            dialect: org.hibernate.dialect.H2Dialect
            show_sql: true
            max_fetch_depth: 3
            jdbc:
              fetch_size: 3
            ddl-auto: create-drop
            id:
              new_generator_mappings: false

# KJar to test
test:
  deployment:
    kjar:
      alias: kie-sboot-test-kjar
      containerId: kie-sboot-test-kjar-1_0-SNAPSHOT

# Spring Container Config
spring:
  banner:
    location: classpath:banner.txt
  datasource:
    driver-class-name: org.h2.Driver
    password: sa
    username: sa
    url: jdbc:h2:mem:kieserver
  h2:
    console:
      enabled: true
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        hbm2ddl:
          auto: update
        show_sql: false
  jta:
#   log-dir: Narayana 'Transacted-Logs' DIR, default is project root
    narayana:
      transaction-manager-id: 1